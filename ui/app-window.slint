import { HorizontalBox, VerticalBox,
     Button, StandardButton, ProgressIndicator, 
     LineEdit, TabWidget, TextEdit, Palette } from "std-widgets.slint";
import "../CaskaydiaCove-Regular.ttf";

export component ErrorDialog inherits Dialog {
    in property <string> error_mesg;

    preferred-width: 200px;
    default-font-family: "Caskaydia Cove";
    default-font-size: 15px;
    preferred-height: 70px;

    title: "Error";
    Text {
      text: "âš  Error:" + error_mesg;
    }
    StandardButton{ 
        kind: ok; 
        clicked => {
           root.visible=false;
        }
    }
    Button {
      text: "More Info";
      dialog-button-role: action;
    }
}

export component MainWindow inherits Window {
    pure callback render_plot() -> image;
    pure callback tcp_server(string, int, bool);
    pure callback clear_cords();
    
    out property <string> appid;
    out property <string> server_ip: "127.0.0.1";
    out property <int> listen_port: 2887;
    in property <float> plot_process;
    in property <image> plot;
    in property <string> console;
    in-out property <bool> pressed : false;

    property <bool> dark-color-theme: Palette.color-scheme == ColorScheme.dark;

    title: "Im a simple Tcp Plotter";
    min-width: 850px;
    min-height: 700px;
    default-font-family: "Caskaydia Cove";
    default-font-size: 15px;

    VerticalBox {
        // alignment: LayoutAlignment.space-between;
        HorizontalBox {
            alignment: LayoutAlignment.stretch;
            spacing: 32px;
            padding: 16px;
            Text {
                font-size: 18px;
                horizontal-stretch: 0;
                vertical-stretch: 0;
                text: "Server IP";
                vertical-alignment: TextVerticalAlignment.center;
                horizontal-alignment: TextHorizontalAlignment.center;
            }
            
            LineEdit {
                input-type: text;
                placeholder-text: "127.0.0.1";
                // width: 200px;
                text: root.server_ip;
                edited(text) => {
                    root.server_ip = text;
                }
            }
        
            Text {
                font-size: 18px;
                text: "Port";
                vertical-alignment: TextVerticalAlignment.center;
                horizontal-alignment: TextHorizontalAlignment.center;
            }

            LineEdit {
                input-type: number;
                placeholder-text: "2887";
                width: 15%;
                text: root.listen_port;
                edited(text) => {
                    root.listen_port = text.to-float();
                }
            }
            
            Button {
                text: "Listen";
                checkable: true;
                enabled: !pressed;
                primary: true;
                clicked => {
                    root.tcp_server(server_ip, listen_port, pressed);
                    pressed = !pressed;
                }
            }
            
            Button {
                text: "Clear";
                clicked => {
                    root.clear_cords();
                }
            }
        }

        TabWidget {
            vertical-stretch: 1;
            horizontal-stretch: 1;
            Tab {
                title: "Graph";
                VerticalBox {
                    Image {
                        image-fit: contain;
                        source: plot;
                        accessible-label: "Loading....";
                    }
                }
            }
            Tab {
                title: "Console";
                TextEdit {
                    height: 100%;
                    width: 100%;
                    read-only: true;
                    wrap: word-wrap;
                    text: root.console;
                }
            }
        }

        ProgressIndicator {
            width: 80%;
            height: 5px;
            progress: plot_process;
        }
    }
}
