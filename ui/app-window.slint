import { GroupBox, HorizontalBox, VerticalBox, Button, ProgressIndicator, LineEdit, Palette, TabWidget, TextEdit } from "std-widgets.slint";
import "../CaskaydiaCove-Regular.ttf";

export component MainWindow inherits Window {
    pure callback render_plot() -> image;
    pure callback tcp_server(string, int, bool);
    
    out property <string> appid;
    out property <string> server_ip: "127.0.0.1";
    out property <int> listen_port: 2887;
    in property <float> plot_process;
    in property <image> plot;
    in-out property <bool> pressed : false;

    title: "Im a simple Tcp Plotter";
    min-width: 800px;
    default-font-family: "Caskaydia Cove";
    default-font-size: 15px;
    min-height: 600px;

    VerticalBox {
        alignment: LayoutAlignment.space-between;
        HorizontalBox {
            alignment: LayoutAlignment.space-around;
            spacing: 30px;
            padding: 10px;
            Text {
                font-size: 18px; 
                text: "Server IP";
                vertical-alignment: TextVerticalAlignment.center;
            }
            
            LineEdit {
                input-type: text;
                placeholder-text: "127.0.0.1";
                width: 300px;
                text: root.server_ip;
                edited(text) => {
                    root.server_ip = text;
                }
            }
        
            Text {
                font-size: 18px;
                text: "Port";
                vertical-alignment: TextVerticalAlignment.center;
            }

            LineEdit {
                input-type: number;
                placeholder-text: "2887";
                width: 80px;
                text: root.listen_port;
                edited(text) => {
                    root.listen_port = text.to-float();
                }
            }
            
            Button {
                text: "Listen";
                checkable: true;
                enabled: !pressed;
                primary: true;
                clicked => {
                    root.tcp_server(server_ip, listen_port, pressed);
                    pressed = !pressed;
                }
            }
        }

        TabWidget {
            height: 80%;
            width: 80%;
            Tab {
                title: "Graph";
                VerticalBox {
                    Image {
                        image-fit: contain;
                        source: plot;
                        accessible-label: "Loading....";
                    }
                }
            }
            Tab {
                title: "Console";
                TextEdit {}
            }
        }

        ProgressIndicator {
            width: 80%;
            height: 1%;
            progress: plot_process;
        }
    }
}
